@page "/RunSession"
@using BingoLingo.Shared
@inject HttpClient Http
@inject ILogger<RunSession> _logger;

<PageTitle>Translate!</PageTitle>

@if (_translation == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <EditForm Model="_translation" OnSubmit="Submit">
        <div class="form-group text-center">
            <h3>Translate the following:</h3>
            <p>"@_translation.Original"</p>
            <InputText @bind-Value="_submittedTranslation" autofocus="autofocus" class="form-control"/>
            <button type="submit" class="btn btn-primary">Submit</button>
            @if (_questionSubmitted)
            {
                <div style="font-size:48px">
                    @if (_success)
                    {
                        <div>&#x2705;</div>
                    }
                    else
                    {
                        <div>&#x274C;</div>
                    }
                </div>
                <button class="btn-primary" onclick="@Continue">Continue</button>
            }
        </div>
    </EditForm>
}

@code {
    private Translation? _translation;
    private StartedSession? _session;
    private string? _submittedTranslation;
    private bool _questionSubmitted;
    private bool _success;
    private Queue<Translation>? _translations;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.PutAsync("/Sessions/", null);
        await response.ThrowIfError(_logger);
        _session = await response.Content.ReadFromJsonAsync<StartedSession>();

        _translations = new Queue<Translation>(_session!.Translations);

        NextTranslation();
    }

    private void Continue()
    {
        NextTranslation();
    }

    private void NextTranslation()
    {
        if (_translations!.Any())
        {
	        _questionSubmitted = false;
	        _submittedTranslation = "";
            _translation = _translations!.Dequeue();
        }
    }

    private void Submit()
    {
        var submitted = _submittedTranslation?.Trim();
        _success = _translation?.Translated == submitted;
        _questionSubmitted = true;
    }
}